name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.ACTIONS_TOKEN }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Get current version
        id: version
        run: |
          current=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          base=${current%-SNAPSHOT}
          IFS='.' read -r major minor patch <<< "$base"
          patch=$((patch + 1))
          new_version="${major}.${minor}.${patch}-SNAPSHOT"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Update pom.xml
        run: |
          mvn versions:set -DnewVersion=${{ steps.version.outputs.new_version }}
          mvn versions:commit

      - name: Set git remote with token for authenticated push
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.ACTIONS_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Create or update release branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Erstelle neuen Branch oder checke ihn aus (falls schon vorhanden)
          git checkout -B release/v${{ steps.version.outputs.new_version }}

          # Commit der Ã„nderungen (falls vorhanden)
          git commit -am "Release v${{ steps.version.outputs.new_version }}" || echo "No changes to commit"

          # Versuche den Remote-Branch zu holen (falls er existiert)
          git fetch origin release/v${{ steps.version.outputs.new_version }} || echo "Remote branch does not exist"

          # Rebase auf Remote-Branch, falls vorhanden
          git rebase origin/release/v${{ steps.version.outputs.new_version }} || echo "Rebase failed or no remote branch"

          # Push mit force-with-lease, um non-fast-forward Fehler zu vermeiden
          git push origin release/v${{ steps.version.outputs.new_version }} --force-with-lease

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}
          branch: release/v${{ steps.version.outputs.new_version }}
          title: "Release v${{ steps.version.outputs.new_version }}"
          body: "Automated release of version ${{ steps.version.outputs.new_version }}"
          base: master
          draft: false

      - name: Enable auto-merge
        run: |
          pr_number=${{ steps.create_pr.outputs.pull-request-number }}
          gh pr merge $pr_number --merge --auto
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
